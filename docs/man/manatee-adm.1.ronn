# manatee-adm(1) -- Administration tools for Manatee


## SYNOPSIS

`manatee-adm [OPTIONS] COMMAND [ARGS...]`


## DESCRIPTION

The `manatee-adm` command is used to administer a Manatee shard.

## COMMANDS

### status [-hs] -z

Display the status of the current manatee shard. By default, the status for
every shard is returned.

-h, --help
    Displays a help message.

-s, --shard shard
    Display status for the specified shard only.

-z, --zk Zookeeper url
    Zookeeper url (such as `10.0.1.1:2181`)

The output is a JSON object which encapsulates the state of the Manatee shard.
Each peer in the shard is denoted by its role in the shard, which will be
either `primary`, `sync`, or `async`. If there are greater than 3 peers in the
shard, each additional peer will be denoted `async-n`, where n is a
monotonically increasing integer starting at 1.

The `repl` field contains postgresql replication information of the next peer
in the shard. On the primary, this would be the `sync` peer, and on the `sync`
this would be the `async` peer.

```
"1.moray.emy-10.joyent.us": {
  "primary": {
    "zoneId": "31f40985-9578-48b1-a92c-062d1329008b",
    "ip": "172.27.10.242",
    "pgUrl": "tcp://postgres@172.27.10.242:5432/postgres",
    "repl": {
      "pid": 41435,
      "usesysid": 10,
      "usename": "postgres",
      "application_name": "tcp://postgres@172.27.10.238:5432/postgres",
      "client_addr": "172.27.10.238",
      "client_hostname": "",
      "client_port": 62784,
      "backend_start": "2014-08-20T00:22:07.802Z",
      "state": "streaming",
      "sent_location": "0/177D7C0",
      "write_location": "0/177D7C0",
      "flush_location": "0/177D7C0",
      "replay_location": "0/177D7C0",
      "sync_priority": 1,
      "sync_state": "sync"
    }
  },
  "sync": {
    "zoneId": "5d5b386a-29ff-410b-80ae-a63f74ced656",
    "ip": "172.27.10.238",
    "pgUrl": "tcp://postgres@172.27.10.238:5432/postgres",
    "repl": {
      "pid": 41417,
      "usesysid": 10,
      "usename": "postgres",
      "application_name": "tcp://postgres@172.27.10.254:5432/postgres",
      "client_addr": "172.27.10.254",
      "client_hostname": "",
      "client_port": 36209,
      "backend_start": "2014-08-20T00:22:02.350Z",
      "state": "streaming",
      "sent_location": "0/177D7C0",
      "write_location": "0/177D7C0",
      "flush_location": "0/177D7C0",
      "replay_location": "0/177D7C0",
      "sync_priority": 0,
      "sync_state": "async"
    }
  },
  "async": {
    "zoneId": "c4f07ca7-7249-463e-b7e3-e9e8b49b4535",
    "ip": "172.27.10.254",
    "pgUrl": "tcp://postgres@172.27.10.254:5432/postgres",
    "repl": {},
    "lag": {
      "time_lag": null
    }
  }
}
```

### clear [-h] -sz

Clear the shard from safe mode.

-h, --help
    Displays a help message.

-s, --shard shard
    Shard name.

-z, --zk Zookeeper url
    Zookeeper url (such as `10.0.1.1:2181`)

### history [OPTIONS...]

Display the history of Manatee flips.

-h, --help
    Displays a help message.

-s, --shard shard
    Shard name.

-z, --zk Zookeeper url
    Zookeeper url (such as `10.0.1.1:2181`)

The output is newline separated JSON where each line is a state transition in
the shard, e.g. Leader flip, new peer in shard.

```
{"time":"1406081535329","date":"2014-07-23T02:12:15.329Z","ip":"10.1.0.144:5432","action":"AssumeLeader","role":"Leader","master":"","slave":"","zkSeq":"0000000066"}
{"time":"1406081648474","date":"2014-07-23T02:14:08.474Z","ip":"10.1.0.144:5432","action":"NewStandby","role":"leader","master":"","slave":"10.1.0.139:5432","zkSeq":"0000000067"}
{"time":"1406081648908","date":"2014-07-23T02:14:08.908Z","ip":"10.1.0.139:5432","action":"NewLeader","role":"Standby","master":"10.1.0.144:5432","slave":"","zkSeq":"0000000068"}
{"time":"1406081715610","date":"2014-07-23T02:15:15.610Z","ip":"10.1.0.140:5432","action":"NewLeader","role":"Standby","master":"10.1.0.139:5432","slave":"","zkSeq":"0000000069"}
{"time":"1406081764623","date":"2014-07-23T02:16:04.623Z","ip":"10.1.0.139:5432","action":"AssumeLeader","role":"Leader","master":"","slave":"10.1.0.140:5432","zkSeq":"0000000070"}
{"time":"1406081827174","date":"2014-07-23T02:17:07.174Z","ip":"10.1.0.144:5432","action":"NewLeader","role":"Standby","master":"10.1.0.140:5432","slave":"","zkSeq":"0000000071"}
{"time":"1406153586656","date":"2014-07-23T22:13:06.656Z","ip":"10.1.0.139:5432","action":"AssumeLeader","role":"Leader","master":"","slave":"","zkSeq":"0000000072"}
{"time":"1406153590231","date":"2014-07-23T22:13:10.231Z","ip":"10.1.0.140:5432","action":"NewLeader","role":"Standby","master":"10.1.0.139:5432","slave":"","zkSeq":"0000000073"}
{"time":"1406153590730","date":"2014-07-23T22:13:10.730Z","ip":"10.1.0.139:5432","action":"NewStandby","role":"leader","master":"","slave":"10.1.0.140:5432","zkSeq":"0000000074"}
{"time":"1406153600755","date":"2014-07-23T22:13:20.755Z","ip":"10.1.0.144:5432","action":"NewLeader","role":"Standby","master":"10.1.0.140:5432","slave":"","zkSeq":"0000000075"}
{"time":"1406154642830","date":"2014-07-23T22:30:42.830Z","ip":"10.1.0.140:5432","action":"AssumeLeader","role":"Leader","master":"","slave":"10.1.0.144:5432","zkSeq":"0000000076"}
{"time":"1406154746424","date":"2014-07-23T22:32:26.424Z","ip":"10.1.0.139:5432","action":"NewLeader","role":"Standby","master":"10.1.0.144:5432","slave":"","zkSeq":"0000000077"}
{"time":"1406275024079","date":"2014-07-25T07:57:04.079Z","ip":"10.1.0.140:5432","action":"NewStandby","role":"leader","master":"","slave":"10.1.0.139:5432","zkSeq":"0000000078"}
{"time":"1406275024298","date":"2014-07-25T07:57:04.298Z","ip":"10.1.0.139:5432","action":"NewLeader","role":"Standby","master":"10.1.0.140:5432","slave":"","zkSeq":"0000000079"}
{"time":"1406275032166","date":"2014-07-25T07:57:12.166Z","ip":"10.1.0.144:5432","action":"NewLeader","role":"Standby","master":"10.1.0.139:5432","slave":"","zkSeq":"0000000080"}
```

Each line contains the following fields.


* `time` MS since epoch of the transition event.
* `date` Time in UTC of the transition event.
* `ip` IP address of the peer.
* `action` Transition event type, one of
    * `AssumeLeader`, the peer has become the primary of this shard.
    * `NewLeader`, the peer has a new leader it's replicating from.
    * `NewStandby`, the peer has a new standby it's replicating to.
    * `ExpiredStandby`, the peer's current standby has expired from the shard.
* `role` Current role of the peer, one of `Leader` or `Standby`. The primary of
the shard will be `Leader`, and all other peers will be `Standby`.
* `master` Peer we are replicating from.
* `slave` Peer we are replicating to.
* `zkSeq` Internal tracker of the number of state transitions.



### promote [-h] -c

Promote the current peer to the primary of the shard.

-h, --help
    Displays a help message.
-c, --config manatee sitter config
    Path to Manatee sitter config. (such as
    `/opt/smartdc/manatee/etc/sitter.cfg`)

### rebuild [-hf] -c

Rebuild the current peer. In the event of data corruption on the peer, this
command will attempt to rebuild this peer. It will first rollback the current
zfs snapshot and attempt to replicate from its leader. Failing that, a full
rebuild will be performed by receiving the full zfs snapshot from its leader.

-h, --help
    Displays a help message.
-c, --config manatee sitter config
    Path to Manatee sitter config. (such as
    `/opt/smartdc/manatee/etc/sitter.cfg`)
-f, --full
    Skip rolling back to the snapshot and do a full rebuild.

### check-lock [-h] -pz

Check the existence of a lock path in Zookeeper. Returns 1 if the lock exists,
0 if it doesn't.

-h, --help
    Displays a help message.

-p, --path lock path
    Lock path in Zookeeper. (such as `/my_special_lock`)

-z, --zk Zookeeper url
    Zookeeper url (such as `10.0.1.1:2181`)


## ENVIRONMENT

`ZK_IPS`
    In place of `-z, --zookeeper`

`SHARD`
    In place of `-s, --shard`

`MANATEE_SITTER_CONFIG`
    In place of `-c, --config`

`LOG_LEVEL`
    Sets the node-bunyan logging level. Defaults to fatal.


## COPYRIGHT


Copyright (c) 2014 Joyent Inc., All rights reserverd.
